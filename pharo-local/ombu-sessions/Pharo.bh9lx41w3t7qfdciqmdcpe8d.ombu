OmEntry {	#tags : {		#author : 'francoisrousseau',		#time : DateAndTime [ '2018-01-14T19:00:18.313749-05:00' ],		#prior : OmReference [ 'Pharo.1ety6epj8i5kbjcxveaa6cbgd', '5' ],		#self : OmReference [ '1' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'ConfigurationOfAltBrowser-ThierryGoubier.46'		]	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ],		#time : DateAndTime [ '2018-01-14T19:00:18.567764-05:00' ],		#trigger : @3	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ConfigurationOfAltBrowser\r\tinstanceVariableNames: \'project\'\r\tclassVariableNames: \'LastVersionLoad\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ConfigurationOfAltBrowser,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfAltBrowser,						#isMetaSide : false					},					#name : #project,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ConfigurationOfAltBrowser class\r\tinstanceVariableNames: \'\''				},				#name : #'ConfigurationOfAltBrowser class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ConfigurationOfAltBrowser,					#isMetaSide : false				},				#parent : @7,				#content : 'AltBrowser: a tree-based system browser for Pharo with smart suggestions, refactoring integration including environment filtering, and git integration.\r\rIt integrates: the finder, message browser and the usual system browser.',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfAltBrowser,						#isMetaSide : false					},					#name : #LastVersionLoad,					#parent : @7				}			],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'AltBrowser: a tree-based system browser for Pharo with smart suggestions, refactoring integration including environment filtering, and git integration.\r\rIt integrates: the finder, message browser and the usual system browser.',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ],		#time : DateAndTime [ '2018-01-14T19:00:18.571798-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #ConfigurationOfAltBrowser,		#affectedPackageName : #ConfigurationOfAltBrowser	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ],		#time : DateAndTime [ '2018-01-14T19:00:18.668828-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ConfigurationOfAltBrowser\r\tinstanceVariableNames: \'project\'\r\tclassVariableNames: \'LastVersionLoad\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ConfigurationOfAltBrowser\''			},			#name : #ConfigurationOfAltBrowser,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfAltBrowser,						#isMetaSide : false					},					#name : #project,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ConfigurationOfAltBrowser class\r\tinstanceVariableNames: \'\''				},				#name : #'ConfigurationOfAltBrowser class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ConfigurationOfAltBrowser,					#isMetaSide : false				},				#parent : @8,				#content : 'AltBrowser: a tree-based system browser for Pharo with smart suggestions, refactoring integration including environment filtering, and git integration.\r\rIt integrates: the finder, message browser and the usual system browser.',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfAltBrowser,						#isMetaSide : false					},					#name : #LastVersionLoad,					#parent : @8				}			],			#category : #ConfigurationOfAltBrowser,			#package : #ConfigurationOfAltBrowser,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ],		#time : DateAndTime [ '2018-01-14T19:00:18.759221-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #DevelopmentSupport,			#protocol : #'development support',			#sourceCode : 'DevelopmentSupport\r\r"See the methods in the \'development support\' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."\r\t<apiDocumentation>\r',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ],		#time : DateAndTime [ '2018-01-14T19:00:18.7629-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #'baseConfigurationClassIfAbsent:',			#protocol : #private,			#sourceCode : 'baseConfigurationClassIfAbsent: aBlock\r\r\t^Smalltalk\r\t\tat: #MetacelloBaseConfiguration\r\t\tifAbsent: [ \r\t\t\tself ensureMetacelloBaseConfiguration.\r\t\t\tSmalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ].\r',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ],		#time : DateAndTime [ '2018-01-14T19:00:18.766328-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #catalogChangeLog,			#protocol : #catalog,			#sourceCode : 'catalogChangeLog\r\t^ \'\rTime: 13 June 2013, 5:24:06 pm\r\rFirst AltBrowser configuration\r--\rTime: 13 June 2013, 5:24:07 pm\r\rTry again to get two versions for Pharo 2. and Pharo 3.\r--\rRegular updates for Pharo 3 support.\rversion 0.1 : Pharo 2\rversion 0.2 : Pharo 3\r--\rTime: Date today 18 March 2014\r--\rPerformance improvements, documentation.\r\'',			#stamp : 'ThierryGoubier 3/18/2014 13:20',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ],		#time : DateAndTime [ '2018-01-14T19:00:18.768933-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #catalogContactInfo,			#protocol : #catalog,			#sourceCode : 'catalogContactInfo\r\t^ \'https://github.com/ThierryGoubier\'',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ],		#time : DateAndTime [ '2018-01-14T19:00:18.77139-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #catalogDescription,			#protocol : #catalog,			#sourceCode : 'catalogDescription\r\t^ \'AltBrowser: a tree-based system browser for Pharo with smart suggestions, refactoring integration including environment filtering, and git integration. With a minimalistic GUI so as to be able to put more of them on a screen, and a single GUI to have less to learn to use.\r\rIt integrates: the finder, message browser and, of course, the system browser. It is intended for real world use (i.e. stable and complete enough for development tasks on both Pharo2 and Pharo3) and GUI experiments.\r\rSee more here: http://thierrygoubier.github.io/AltBrowser/\'',			#stamp : 'ThierryGoubier 3/18/2014 13:17',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ],		#time : DateAndTime [ '2018-01-14T19:00:18.774-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #catalogKeyClassesAndExample,			#protocol : #catalog,			#sourceCode : 'catalogKeyClassesAndExample\r\t^ \'\rThe core class is AltBrowser. On the class side, it maintain an abstract tree of the code base and track all code updates (class, package and method additions, changes and removal). On the instance side, it maintain a simple GUI view filtered by a RB environment, with updates triggered by the class side. The GUI is a tree pane and a code pane, nothing more.\r\rThe abstract tree is build out of AltAbstractNode subclasses, one for each type of software system component. Theses nodes have a framework for : context-based naming, tree search, menu building (tree and text), keyboard shortcut building (tree and text), code updates, drag and drop, commands (see below), accept and double click, environment filtering, and stay similar to the MorphTreeNodeModel framework for building childrens.\r\rAll menus and shortcuts are build out of AltCommand subclasses objects. The command framework in the nodes allow for easy extension by other packages, and commands at core are simply : a label, [an icon], activation conditions, [ a shortcut ] , and an execute. Interesting commands are AST-based (AltAstNodeCommand subclasses : the origin of SmartSuggestions), and the RB based commands.\r\rSmall additions of interest are :\r\ra method version browser able to query a gitfiletree repository instead of the change log : AltVersionBrowser.\r\rin place text-based search in the tree : AltKeyboardSearchInTree.\r\'',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ],		#time : DateAndTime [ '2018-01-14T19:00:18.776411-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #catalogKeywords,			#protocol : #catalog,			#sourceCode : 'catalogKeywords\r\t^ #(#Development #SystemBrowser #MorphTreeMorph #MessageBrowser #ScopedBrowsing #SmartSuggestions #git #IDE)',			#stamp : 'ThierryGoubier 3/25/2014 11:33',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ],		#time : DateAndTime [ '2018-01-14T19:00:18.779872-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #ensureGitFileTree,			#protocol : #'gitfiletree support',			#sourceCode : 'ensureGitFileTree\r\t"And all related dependencies."\r\r\tSmalltalk\r\t\tat: #MCFileTreeGitRepository\r\t\tifAbsent: [ \r\t\t\tGofer new\r\t\t\t\turl: \'http://smalltalkhub.com/mc/Pharo/MetaRepoForPharo30/main\';\r\t\t\t\tconfigurationOf: \'GitFileTree\';\r\t\t\t\tloadDevelopment ]',			#stamp : 'ThierryGoubier 2/6/2014 15:54',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ],		#time : DateAndTime [ '2018-01-14T19:00:18.782132-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #ensureMetacello,			#protocol : #private,			#sourceCode : 'ensureMetacello\r\r\t(self baseConfigurationClassIfAbsent: []) ensureMetacello',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ],		#time : DateAndTime [ '2018-01-14T19:00:18.784316-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #ensureMetacelloBaseConfiguration,			#protocol : #private,			#sourceCode : 'ensureMetacelloBaseConfiguration\r\r\tSmalltalk\r\t\tat: #MetacelloBaseConfiguration\r\t\tifAbsent: [ \r\t\t\t| repository version |\r\t\t\trepository := MCHttpRepository location: \'http://seaside.gemstone.com/ss/metacello\' user: \'\' password: \'\'.\r\t\t\trepository\r\t\t\t\tversionReaderForFileNamed: \'Metacello-Base-DaleHenrichs.2.mcz\'\r\t\t\t\tdo: [ :reader | \r\t\t\t\t\tversion := reader version.\r\t\t\t\t\tversion load.\r\t\t\t\t\tversion workingCopy repositoryGroup addRepository: repository ] ]',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ],		#time : DateAndTime [ '2018-01-14T19:00:18.786569-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #isMetacelloConfig,			#protocol : #'metacello tool support',			#sourceCode : 'isMetacelloConfig\r\t"Answer true and the Metacello tools will operate on you"\r\t\r\t^true',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ],		#time : DateAndTime [ '2018-01-14T19:00:18.789514-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #load,			#protocol : #loading,			#sourceCode : 'load\r\t"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."\r\r\t"self load"\r\r\t<apiDocumentation>\r\t^(self project version: #stable) load',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ],		#time : DateAndTime [ '2018-01-14T19:00:18.792006-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #loadBleedingEdge,			#protocol : #loading,			#sourceCode : 'loadBleedingEdge\r\t"Load the latest versions of the mcz files defined for this project. It is not likely that the #bleedingEdge has been tested."\r\r\t"self loadBleedingEdge"\r\r\t<apiDocumentation>\r\t^(self project version: #bleedingEdge) load',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ],		#time : DateAndTime [ '2018-01-14T19:00:18.794321-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #loadDevelopment,			#protocol : #loading,			#sourceCode : 'loadDevelopment\r\t"Load the #development version defined for this platform. The #development version will change over time and is not expected to be stable."\r\r\t"self loadDevelopment"\r\r\t<apiDocumentation>\r\t^(self project version: #development) load',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ],		#time : DateAndTime [ '2018-01-14T19:00:18.796583-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #project,			#protocol : #accessing,			#sourceCode : 'project\r\r\t^self new project',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ],		#time : DateAndTime [ '2018-01-14T19:00:18.799356-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #updateInAlt30,			#protocol : #private,			#sourceCode : 'updateInAlt30\r\t"Update the smalltalkhub SmaCC repository."\r\r\t"self updateInAlt30"\r\r\t| repo repoStHub names username password location namesStHub namesToFetchAndPush gofer |\r\trepo := \'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=git&branch=pharo3.0\' asUrl\r\t\tmcRepositoryAsUser: nil\r\t\twithPassword: nil.\r\trepo := MCRepositoryGroup default repositories detect: [ :each | each = repo ] ifNone: [ repo ].\r\trepo cacheAllFileNames.\r\tnames := repo readableFileNames collect: [ :e | e name ].\r\tlocation := \'https://smalltalkhub.com/mc/ThierryGoubier/Alt30/main\'.\r\tusername := UIManager default request: \'User name for \' , String cr , location initialAnswer: \'\'.\r\tusername isNil\r\t\tifTrue: [ ^ self ].\r\tpassword := UIManager default requestPassword: \'Password for "\' , username , \'" at \' , String cr , location.\r\tpassword isNil\r\t\tifTrue: [ ^ self ].\r\trepoStHub := MCHttpRepository location: location user: username password: password.\r\tnamesStHub := repoStHub readableFileNames.\r\tnamesToFetchAndPush := names reject: [ :each | namesStHub includes: each ].\r\tgofer := Gofer new repository: repo.\r\tnamesToFetchAndPush do: [ :e | gofer version: e ].\r\tgofer fetch.\r\tgofer := Gofer new repository: repoStHub.\r\tnamesToFetchAndPush do: [ :e | gofer version: e ].\r\tgofer push',			#stamp : 'ThierryGoubier 6/27/2014 15:18',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ],		#time : DateAndTime [ '2018-01-14T19:00:18.802491-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfAltBrowser class',				#isMetaSide : true			},			#name : #validate,			#protocol : #'development support',			#sourceCode : 'validate\r\t"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). \r\tErrors identify specification issues that will result in unexpected behaviour when you load the configuration. \r\tCritical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.\r\tWarnings identify specification issues that are technically correct, but are worth take a look at."\r\r\t"self validate"\r\r\t<apiDocumentation>\r\tself ensureMetacello.\r\t^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ],		#time : DateAndTime [ '2018-01-14T19:00:18.804818-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #'baseline01:',			#protocol : #baseline,			#sourceCode : 'baseline01: spec\r\t<version: \'0.1-baseline\'>\r\tspec\r\t\tfor: #common\r\t\tdo: [ \r\t\t\tself class ensureGitFileTree.\r\t\t\tspec blessing: #baseline.\r\t\t\tspec package: \'Alt-Browser\'.\r\t\t\tspec group: \'default\' with: #(\'Alt-Browser\') ]',			#stamp : 'ThierryGoubier 4/1/2014 15:09',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ],		#time : DateAndTime [ '2018-01-14T19:00:18.806961-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #customProjectAttributes,			#protocol : #accessing,			#sourceCode : 'customProjectAttributes\r\t "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #\'Condition1\' with: #\'Condition2.\r\tFor more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes"\r\r\t^ #().',			#stamp : 'ThierryGoubier 1/30/2014 10:32:39',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ],		#time : DateAndTime [ '2018-01-14T19:00:18.809146-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #'development:',			#protocol : #'symbolic versions',			#sourceCode : 'development: spec\r\t<symbolicVersion: #\'development\'>\r\r\tspec for: #\'pharo2.x\' version: \'0.3\'.\r\tspec for: #\'pharo3.x\' version: \'0.4\'.\r\tspec for: #\'pharo4.x\' version: \'0.6\'\r\r',			#stamp : 'ThierryGoubier 6/27/2014 15:14',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ],		#time : DateAndTime [ '2018-01-14T19:00:18.8122-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #project,			#protocol : #accessing,			#sourceCode : 'project\r\t^ project\r\t\tifNil: [ \r\t\t\t| constructor |\r\t\t\t\t"Bootstrap Metacello if it is not already loaded"\r\t\t\t(self class baseConfigurationClassIfAbsent: [  ]) ensureMetacello.\r\t\t\t\t"Construct Metacello project"\r\t\t\tproject := MetacelloMCProject new projectAttributes: self customProjectAttributes.\r\t\t\tconstructor := (Smalltalk at: #MetacelloVersionConstructor) on: self project: project.\r\t\t\tproject loadType: #linear.\t"change to #atomic if desired"\r\t\t\tproject ]',			#stamp : 'ThierryGoubier 2/6/2014 15:44',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ],		#time : DateAndTime [ '2018-01-14T19:00:18.814577-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #'stable:',			#protocol : #'symbolic versions',			#sourceCode : 'stable: spec\r\t<symbolicVersion: #\'stable\'>\r\r\tspec for: #\'pharo2.x\' version: \'0.1\'.\r\tspec for: #\'pharo3.x\' version: \'0.2\'.\r\tspec for: #\'pharo4.x\' version: \'0.5\'\r',			#stamp : 'ThierryGoubier 11/25/2014 11:42',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ],		#time : DateAndTime [ '2018-01-14T19:00:18.816766-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #'version01:',			#protocol : #versions,			#sourceCode : 'version01: spec\r\t<version: \'0.1\' imports: #(\'0.1-baseline\')>\r\tspec\r\t\tfor: #\'pharo2.x\'\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tblessing: #stable;\r\t\t\t\tauthor: \'ThierryGoubier\';\r\t\t\t\trepository: \'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=https&branch=pharo2.0\';\r\t\t\t\tdescription:\r\t\t\t\t\t\t\'AltBrowser: a tree-based, simple and advanced system browser / message list / finder for Pharo 2.0 with smart suggestions, refactoring integration and git integration.\'.\r\t\t\tspec package: \'Alt-Browser\' with: \'Alt-Browser-ThierryGoubier.1\' ]',			#stamp : 'ThierryGoubier 4/1/2014 15:04',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ],		#time : DateAndTime [ '2018-01-14T19:00:18.819379-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #'version02:',			#protocol : #versions,			#sourceCode : 'version02: spec\r\t<version: \'0.2\'>\r\tspec\r\t\tfor: #\'pharo3.x\'\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tblessing: #stable;\r\t\t\t\tauthor: \'ThierryGoubier\';\r\t\t\t\tdescription:\r\t\t\t\t\t\t\'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 3.0 with smart suggestions, refactoring integration and git integration\'.\r\t\t\tspec\r\t\t\t\tbaseline: \'AltBrowser\' with: [ spec repository: \'github://ThierryGoubier/AltBrowser:pharo3.0\' ];\r\t\t\t\timport: \'AltBrowser\' ]',			#stamp : 'ThierryGoubier 11/25/2014 15:01',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ],		#time : DateAndTime [ '2018-01-14T19:00:18.821554-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #'version03:',			#protocol : #versions,			#sourceCode : 'version03: spec\r\t<version: \'0.3\' imports: #(\'0.1-baseline\')>\r\tspec\r\t\tfor: #\'pharo2.x\'\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\trepository: \'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?protocol=git&branch=pharo2.0\';\r\t\t\t\tblessing: #development;\r\t\t\t\tauthor: \'ThierryGoubier\';\r\t\t\t\tdescription:\r\t\t\t\t\t\t\'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 2.0 with smart suggestions, refactoring integration and git integration\'. ]',			#stamp : 'ThierryGoubier 4/1/2014 15:05',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ],		#time : DateAndTime [ '2018-01-14T19:00:18.824488-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #'version04:',			#protocol : #versions,			#sourceCode : 'version04: spec\r\t<version: \'0.4\'>\r\tspec\r\t\tfor: #\'pharo3.x\'\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tblessing: #development;\r\t\t\t\tauthor: \'ThierryGoubier\';\r\t\t\t\tdescription:\r\t\t\t\t\t\t\'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 3.0 with smart suggestions, refactoring integration and git integration\';\r\t\t\t\tbaseline: \'AltBrowser\'\r\t\t\t\t\twith: [ spec repository: \'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?branch=pharo3.0\' ];\r\t\t\t\timport: \'AltBrowser\' ]',			#stamp : 'ThierryGoubier 11/25/2014 15:06',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ],		#time : DateAndTime [ '2018-01-14T19:00:18.826871-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #'version05:',			#protocol : #versions,			#sourceCode : 'version05: spec\r\t<version: \'0.5\'>\r\tspec\r\t\tfor: #\'pharo4.x\'\r\t\tdo: [ \r\t\t\tspec blessing: #stable.\r\t\t\tspec description: \'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 4.0 with smart suggestions, refactoring integration and git integration\'.\r\t\t\tspec author: \'ThierryGoubier\'.\r\t\t\tspec timestamp: \'11/25/2014 13:44\'.\r\t\t\tspec\r\t\t\t\tbaseline: \'AltBrowser\' with: [ spec repository: \'github://ThierryGoubier/AltBrowser:pharo4.0\' ];\r\t\t\t\timport: \'AltBrowser\' ]',			#stamp : 'ThierryGoubier 11/25/2014 14:59',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ],		#time : DateAndTime [ '2018-01-14T19:00:18.829065-05:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfAltBrowser,				#isMetaSide : false			},			#name : #'version06:',			#protocol : #versions,			#sourceCode : 'version06: spec\r\t<version: \'0.6\'>\r\tspec\r\t\tfor: #\'pharo4.x\'\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tblessing: #development;\r\t\t\t\tauthor: \'ThierryGoubier\';\r\t\t\t\tdescription:\r\t\t\t\t\t\t\'AltBrowser: a tree-based, simple and advanced system browser / message browser / finder for Pharo 4.0 with smart suggestions, refactoring integration and git integration\';\r\t\t\t\tbaseline: \'AltBrowser\'\r\t\t\t\t\twith: [ spec repository: \'gitfiletree://github.com/ThierryGoubier/AltBrowser.git?branch=pharo4.0\' ];\r\t\t\t\timport: \'AltBrowser\' ]',			#stamp : 'ThierryGoubier 11/25/2014 15:08',			#package : #ConfigurationOfAltBrowser		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#time : DateAndTime [ '2018-01-14T19:00:20.45009-05:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'ConfigurationOfGitFileTree-ThierryGoubier.36'		]	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ],		#time : DateAndTime [ '2018-01-14T19:00:20.703076-05:00' ],		#trigger : @3	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ConfigurationOfGitFileTree\r\tinstanceVariableNames: \'project\'\r\tclassVariableNames: \'LastVersionLoad\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ConfigurationOfGitFileTree,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfGitFileTree,						#isMetaSide : false					},					#name : #project,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ConfigurationOfGitFileTree class\r\tinstanceVariableNames: \'\''				},				#name : #'ConfigurationOfGitFileTree class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ConfigurationOfGitFileTree,					#isMetaSide : false				},				#parent : @7,				#content : 'This configuration is for loading gitfiletree on Pharo3.0 with the correct dependencies.\r\rThis works on Linux and Mac OS X. Access to git on Windows is however not yet possible due to deficiencies in the ability of Pharo to call external commands.',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfGitFileTree,						#isMetaSide : false					},					#name : #LastVersionLoad,					#parent : @7				}			],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'This configuration is for loading gitfiletree on Pharo3.0 with the correct dependencies.\r\rThis works on Linux and Mac OS X. Access to git on Windows is however not yet possible due to deficiencies in the ability of Pharo to call external commands.',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ],		#time : DateAndTime [ '2018-01-14T19:00:20.704795-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpCategoryAddition {		#classCategoryName : #ConfigurationOfGitFileTree,		#affectedPackageName : #ConfigurationOfGitFileTree	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ],		#time : DateAndTime [ '2018-01-14T19:00:20.820917-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #ConfigurationOfGitFileTree\r\tinstanceVariableNames: \'project\'\r\tclassVariableNames: \'LastVersionLoad\'\r\tpoolDictionaries: \'\'\r\tcategory: \'ConfigurationOfGitFileTree\''			},			#name : #ConfigurationOfGitFileTree,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfGitFileTree,						#isMetaSide : false					},					#name : #project,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ConfigurationOfGitFileTree class\r\tinstanceVariableNames: \'\''				},				#name : #'ConfigurationOfGitFileTree class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ConfigurationOfGitFileTree,					#isMetaSide : false				},				#parent : @8,				#content : 'This configuration is for loading gitfiletree on Pharo3.0 with the correct dependencies.\r\rThis works on Linux and Mac OS X. Access to git on Windows is however not yet possible due to deficiencies in the ability of Pharo to call external commands.',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #ConfigurationOfGitFileTree,						#isMetaSide : false					},					#name : #LastVersionLoad,					#parent : @8				}			],			#category : #ConfigurationOfGitFileTree,			#package : #ConfigurationOfGitFileTree,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ],		#time : DateAndTime [ '2018-01-14T19:00:20.907304-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #DevelopmentSupport,			#protocol : #'development support',			#sourceCode : 'DevelopmentSupport\r\t"See the methods in the \'development support\' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."\r\r\t<apiDocumentation>\r\t',			#stamp : 'ThierryGoubier 2/1/2015 09:53',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ],		#time : DateAndTime [ '2018-01-14T19:00:20.912377-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #'baseConfigurationClassIfAbsent:',			#protocol : #private,			#sourceCode : 'baseConfigurationClassIfAbsent: aBlock\r\t^ Smalltalk\r\t\tat: #MetacelloBaseConfiguration\r\t\tifAbsent: [ \r\t\t\tself ensureMetacelloBaseConfiguration.\r\t\t\tSmalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ]',			#stamp : 'ThierryGoubier 1/16/2014 14:13',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ],		#time : DateAndTime [ '2018-01-14T19:00:20.915256-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #catalogChangeLog,			#protocol : #catalog,			#sourceCode : 'catalogChangeLog\r\t^ \'\rTime: jeudi 16 janvier 2014, 14:36:59 (UTC+0100)\r\rFirst version to get a simple way to load the dependencies of gitfiletree://\r\'',			#stamp : 'ThierryGoubier 1/16/2014 14:37',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ],		#time : DateAndTime [ '2018-01-14T19:00:20.918999-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #catalogContactInfo,			#protocol : #catalog,			#sourceCode : 'catalogContactInfo\r\t^ \'https://github.com/ThierryGoubier\'',			#stamp : 'ThierryGoubier 1/16/2014 14:37',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ],		#time : DateAndTime [ '2018-01-14T19:00:20.921567-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #catalogDescription,			#protocol : #catalog,			#sourceCode : 'catalogDescription\r\t^ \'GitFileTree is an integration of Git commands below Monticello, allowing a very simple and powerfull integration with a git repository for tracking Monticello packages, allowing for example one to work from github.com (including with configurations support) without any use of the command line and with perfect support of whatever is the structure of the project under git.\r\rWorks with any possible organisation of the git repository related to the package (single language, multi language, single package, multiple packages, single remote repo, multiple remote repositories, branches, you name it).\r\rGitFileTree: is partially integrated into the original FileTree, but not easily available. This configuration allow for a one step loading with the dependencies.\'',			#stamp : 'ThierryGoubier 3/27/2014 15:18',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ],		#time : DateAndTime [ '2018-01-14T19:00:20.924105-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #catalogKeyClassesAndExample,			#protocol : #catalog,			#sourceCode : 'catalogKeyClassesAndExample\r\t^ \'\rgitfiletree rely on two things :\r- FileTree to write a package as a file hierarchy on disk.\r- Git commands to\r\t- commit a package to the repo as soon as it has been written\r\t- query the repository\r\t- extract a specific commit of the package directory\r\t- push and pull from the origin repository\rOn top of that, gitfiletree does the following:\r\t- Present a complete MC repository GUI with all versions in the history\r\t- Read any version in the history of the repository\r\t- Rebuilt all the MC metadata out of the git history.\rWorks with any possible organisation of the git repository related to the package (single language, multi language, single package, multiple packages, single remote repo, multiple remote repositories, branches, you name it).\r\rSingle principle : does one commit per version of a package. Commit message is the version message in Monticello.\r\rHow to use it:\r\tInstall from the Configuration (via the configuration browser).\r\tFrom scratch:\r\t\tOn the command line, create a git repository on a directory\r\t\t\t$ git init\r\t\tIn the Monticello Browser, do\r\t\t\t+ Repository\r\t\tChoose the Repository type:\r\t\t\tgitfiletree://\r\t\tChoose the directory in which you have created your git repository above.\r\t\tUse then as any other Monticello repository.\r\tFrom an existing git repo such as https://github.com/ExampleUser/ExampleProject\r\t\tIn the Monticello Browser, do\r\t\t\t+ Repository\r\t\tChoose the Repository type:\r\t\t\tRemote git repository\r\t\tType the relevant links:\r\t\t\tlocation: \'\'git@github.com:ExampleUser/ExampleProject.git\'\'\r\t\t\tname: \'\'ExampleProject\'\'\r\t\t\tsubdirectory: \'\'\'\'\r\t\t\tbranch: \'\'\'\'\r\t\tUse then as any other Monticello repository.\t\r\t\tUse the Push and Pull buttons in the repository browser (Monticello Browser "Open" button) to update the remote git repository.\r\'',			#stamp : 'ThierryGoubier 3/27/2014 15:46',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ],		#time : DateAndTime [ '2018-01-14T19:00:20.926296-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #catalogKeywords,			#protocol : #catalog,			#sourceCode : 'catalogKeywords\r\t^ #(#Packages #FileTree #git #Monticello #OSProcess)',			#stamp : 'ThierryGoubier 3/27/2014 15:25',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ],		#time : DateAndTime [ '2018-01-14T19:00:20.930037-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #ensureMetacello,			#protocol : #private,			#sourceCode : 'ensureMetacello\r\t(self baseConfigurationClassIfAbsent: [  ]) ensureMetacello',			#stamp : 'ThierryGoubier 1/16/2014 14:12',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ],		#time : DateAndTime [ '2018-01-14T19:00:20.933665-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #ensureMetacelloBaseConfiguration,			#protocol : #private,			#sourceCode : 'ensureMetacelloBaseConfiguration\r\tSmalltalk\r\t\tat: #MetacelloBaseConfiguration\r\t\tifAbsent: [ \r\t\t\t#(\'http://smalltalkhub.com/mc/dkh/metacello/main\' \'http://seaside.gemtalksystems.com/ss/metacello\')\r\t\t\t\tdo: [ :url | \r\t\t\t\t\t| repository version |\r\t\t\t\t\trepository := MCHttpRepository location: url user: \'\' password: \'\'.\r\t\t\t\t\trepository\r\t\t\t\t\t\tversionReaderForFileNamed: \'Metacello-Base-DaleHenrichs.19.mcz\'\r\t\t\t\t\t\tdo: [ :reader | \r\t\t\t\t\t\t\tversion := reader version.\r\t\t\t\t\t\t\tversion load.\r\t\t\t\t\t\t\tversion workingCopy repositoryGroup addRepository: repository.\r\t\t\t\t\t\t\t^ self ] ].\r\t\t\tself error: \'Error bootstrapping Metacello: likely network error. Please try again\' ]',			#stamp : 'ThierryGoubier 1/16/2014 14:12',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ],		#time : DateAndTime [ '2018-01-14T19:00:20.936042-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #isMetacelloConfig,			#protocol : #'metacello tool support',			#sourceCode : 'isMetacelloConfig\r\t"Answer true and the Metacello tools will operate on you"\r\r\t^ true',			#stamp : 'ThierryGoubier 1/16/2014 14:13',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ],		#time : DateAndTime [ '2018-01-14T19:00:20.938084-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #load,			#protocol : #loading,			#sourceCode : 'load\r\t"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."\r\r\t"self load"\r\r\t<apiDocumentation>\r\t^ (self project version: #stable) load',			#stamp : 'ThierryGoubier 1/16/2014 14:13',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ],		#time : DateAndTime [ '2018-01-14T19:00:20.940031-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #loadBleedingEdge,			#protocol : #loading,			#sourceCode : 'loadBleedingEdge\r\t"Load the latest versions of the mcz files defined for this project. It is not likely that the #bleedingEdge has been tested."\r\r\t"self loadBleedingEdge"\r\r\t<apiDocumentation>\r\t^ (self project version: #bleedingEdge) load',			#stamp : 'ThierryGoubier 1/16/2014 14:13',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ],		#time : DateAndTime [ '2018-01-14T19:00:20.94332-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #loadDevelopment,			#protocol : #loading,			#sourceCode : 'loadDevelopment\r\t"Load the #development version defined for this platform. The #development version will change over time and is not expected to be stable."\r\r\t"self loadDevelopment"\r\r\t<apiDocumentation>\r\t^ (self project version: #development) load',			#stamp : 'ThierryGoubier 1/16/2014 14:13',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ],		#time : DateAndTime [ '2018-01-14T19:00:20.945274-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #project,			#protocol : #accessing,			#sourceCode : 'project\r\r\t^self new project',			#stamp : 'ThierryGoubier 1/16/2014 14:11',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ],		#time : DateAndTime [ '2018-01-14T19:00:20.947183-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ConfigurationOfGitFileTree class',				#isMetaSide : true			},			#name : #validate,			#protocol : #'development support',			#sourceCode : 'validate\r\t"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). \r\tErrors identify specification issues that will result in unexpected behaviour when you load the configuration. \r\tCritical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.\r\tWarnings identify specification issues that are technically correct, but are worth take a look at."\r\r\t"self validate"\r\r\t<apiDocumentation>\r\tself ensureMetacello.\r\t^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore',			#stamp : 'ThierryGoubier 2/1/2015 09:53',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ],		#time : DateAndTime [ '2018-01-14T19:00:20.949336-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfGitFileTree,				#isMetaSide : false			},			#name : #'baseline01:',			#protocol : #baseline,			#sourceCode : 'baseline01: spec\r\t<version: \'0.1-baseline\'>\r\tspec\r\t\tfor: #\'pharo2.x\'\r\t\tdo: [ \r\t\t\tspec blessing: #baseline.\r\t\t\tspec repository: \'http://smalltalkhub.com/mc/ThierryGoubier/MonticelloFileTree-Git/main/\'.\r\t\t\tspec\r\t\t\t\tproject: \'OSProcess\'\r\t\t\t\twith: [ \r\t\t\t\t\tspec\r\t\t\t\t\t\trepository: \'http://ss3.gemstone.com/ss/MetaRepoForPharo20\';\r\t\t\t\t\t\tclassName: \'ConfigurationOfOSProcess\';\r\t\t\t\t\t\tversion: \'4.5.11\';\r\t\t\t\t\t\tloads: #(\'Core with Output\') ].\r\t\t\tspec\r\t\t\t\tproject: \'FileTree\'\r\t\t\t\twith: [ \r\t\t\t\t\tspec\r\t\t\t\t\t\trepository: \'http://ss3.gemstone.com/ss/FileTree\';\r\t\t\t\t\t\tclassName: \'ConfigurationOfFileTree\';\r\t\t\t\t\t\tversion: \'1.0.6.1\';\r\t\t\t\t\t\tloads: #(\'default\') ].\r\t\t\tspec package: \'MonticelloFileTree-Git\'.\r\t\t\tspec group: \'default\' with: #(\'MonticelloFileTree-Git\' \'FileTree\' \'OSProcess\') ]',			#stamp : 'ThierryGoubier 6/27/2014 15:27',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ],		#time : DateAndTime [ '2018-01-14T19:00:20.951497-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfGitFileTree,				#isMetaSide : false			},			#name : #'baseline02:',			#protocol : #baseline,			#sourceCode : 'baseline02: spec\r\t<version: \'0.2-baseline\'>\r\tspec\r\t\tfor: #\'pharo3.x\'\r\t\tdo: [ \r\t\t\tspec blessing: #baseline.\r\t\t\tspec repository: \'http://smalltalkhub.com/mc/ThierryGoubier/Alt30/main/\'.\r\t\t\tspec\r\t\t\t\tconfiguration: \'ProcessWrapper\'\r\t\t\t\t\twith: [ \r\t\t\t\t\t\t\tspec\r\t\t\t\t\t\t\t\tversionString: #stable;\r\t\t\t\t\t\t\t\trepository: \'http://smalltalkhub.com/mc/Pharo/MetaRepoForPharo30/main\' ];\r\t\t\t\tyourself.\r\t\t\tspec\r\t\t\t\tproject: \'OSProcess\'\r\t\t\t\twith: [ \r\t\t\t\t\tspec\r\t\t\t\t\t\trepository: \'http://smalltalkhub.com/mc/Pharo/MetaRepoForPharo30/main/\';\r\t\t\t\t\t\tclassName: \'ConfigurationOfOSProcess\';\r\t\t\t\t\t\tversion: #stable;\r\t\t\t\t\t\tloads: #(\'Core with Output\') ].\r\t\t\tspec package: \'MonticelloFileTree-Git\'.\r\t\t\tspec group: \'default\' with: #(\'MonticelloFileTree-Git\' \'OSProcess\' \'ProcessWrapper\') ]',			#stamp : 'ThierryGoubier 10/20/2015 16:23',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ],		#time : DateAndTime [ '2018-01-14T19:00:20.955268-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfGitFileTree,				#isMetaSide : false			},			#name : #customProjectAttributes,			#protocol : #accessing,			#sourceCode : 'customProjectAttributes\r\t "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #\'Condition1\' with: #\'Condition2.\r\tFor more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes"\r\r\t^ #().',			#stamp : 'ThierryGoubier 1/16/2014 14:14',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ],		#time : DateAndTime [ '2018-01-14T19:00:20.957345-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfGitFileTree,				#isMetaSide : false			},			#name : #'development:',			#protocol : #'symbolic versions',			#sourceCode : 'development: spec\r\t<symbolicVersion: #development>\r\tspec for: #\'pharo2.x\' version: \'0.2\'.\r\tspec for: #\'pharo3.x\' version: \'0.4\'',			#stamp : 'ThierryGoubier 10/20/2015 16:21',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ],		#time : DateAndTime [ '2018-01-14T19:00:20.959462-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfGitFileTree,				#isMetaSide : false			},			#name : #project,			#protocol : #accessing,			#sourceCode : 'project\r\t^ project\r\t\tifNil: [ \r\t\t\t| constructor |\r\t\t\t"Bootstrap Metacello if it is not already loaded"\r\t\t\t(self class baseConfigurationClassIfAbsent: [  ]) ensureMetacello.\t"Construct Metacello project"\r\t\t\tproject := MetacelloMCProject new projectAttributes: self customProjectAttributes.\r\t\t\tconstructor := (Smalltalk at: #MetacelloVersionConstructor) on: self project: project.\r\t\t\tproject loadType: #linear.\t"change to #atomic if desired"\r\t\t\tproject ]',			#stamp : 'ThierryGoubier 1/16/2014 14:15',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ],		#time : DateAndTime [ '2018-01-14T19:00:20.961816-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfGitFileTree,				#isMetaSide : false			},			#name : #'stable:',			#protocol : #'symbolic versions',			#sourceCode : 'stable: spec\r\t<symbolicVersion: #stable>\r\tspec for: #\'pharo2.x\' version: \'0.1\'.\r\tspec for: #\'pharo3.x\' version: \'0.3\'',			#stamp : 'ThierryGoubier 10/20/2015 16:21',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ],		#time : DateAndTime [ '2018-01-14T19:00:20.965433-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfGitFileTree,				#isMetaSide : false			},			#name : #'version01:',			#protocol : #versions,			#sourceCode : 'version01: spec\r\t<version: \'0.1\' imports: #(\'0.1-baseline\')>\r\tspec\r\t\tfor: #\'pharo2.x\'\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tblessing: #stable;\r\t\t\t\tauthor: \'ThierryGoubier\';\r\t\t\t\tdescription: \'Git File Tree: Pharo 2 version of the GitFileTree support\'.\r\t\t\tspec project: \'OSProcess\' with: [ spec version: \'4.5.11\' ].\r\t\t\tspec package: \'MonticelloFileTree-Git\' with: \'MonticelloFileTree-Git-ThierryGoubier.70\' ]',			#stamp : 'ThierryGoubier 10/10/2014 17:03',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ],		#time : DateAndTime [ '2018-01-14T19:00:20.967687-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfGitFileTree,				#isMetaSide : false			},			#name : #'version02:',			#protocol : #versions,			#sourceCode : 'version02: spec\r\t<version: \'0.2\' imports: #(\'0.1-baseline\')>\r\tspec\r\t\tfor: #\'pharo2.x\'\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tblessing: #development;\r\t\t\t\tauthor: \'ThierryGoubier\';\r\t\t\t\tdescription: \'Git File Tree: Pharo 2 version of the GitFileTree support\'.\r\t\t\tspec project: \'OSProcess\' with: [ spec version: \'4.5.11\' ] ]',			#stamp : 'ThierryGoubier 10/10/2014 17:03',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ],		#time : DateAndTime [ '2018-01-14T19:00:20.969741-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfGitFileTree,				#isMetaSide : false			},			#name : #'version03:',			#protocol : #versions,			#sourceCode : 'version03: spec\r\t<version: \'0.3\' imports: #(\'0.2-baseline\')>\r\tspec\r\t\tfor: #\'pharo3.x\'\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tblessing: #stable;\r\t\t\t\tauthor: \'ThierryGoubier\';\r\t\t\t\tdescription: \'Git File Tree: Pharo 3 version of the GitFileTree support\'.\r\t\t\tspec package: \'MonticelloFileTree-Git\' with: \'MonticelloFileTree-Git-ThierryGoubier.97\' ]',			#stamp : 'ThierryGoubier 10/20/2015 16:24',			#package : #ConfigurationOfGitFileTree		}	}}OmEntry {	#tags : {		#author : 'francoisrousseau',		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ],		#time : DateAndTime [ '2018-01-14T19:00:20.97192-05:00' ],		#trigger : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ConfigurationOfGitFileTree,				#isMetaSide : false			},			#name : #'version04:',			#protocol : #versions,			#sourceCode : 'version04: spec\r\t<version: \'0.4\' imports: #(\'0.2-baseline\')>\r\tspec\r\t\tfor: #\'pharo3.x\'\r\t\tdo: [ \r\t\t\tspec\r\t\t\t\tblessing: #development;\r\t\t\t\tauthor: \'ThierryGoubier\';\r\t\t\t\tdescription: \'Git File Tree: Pharo 3 version of the GitFileTree support\'.\r\t\t\tspec project: \'OSProcess\' with: [ spec version: \'4.5.11\' ] ]',			#stamp : 'ThierryGoubier 2/4/2015 09:30',			#package : #ConfigurationOfGitFileTree		}	}}